name: Weekly Website Audit

on:
  schedule:
    # Run every Sunday at midnight UTC
    - cron: '0 0 * * 0'

  # Allow manual trigger
  workflow_dispatch:
    inputs:
      max_pages:
        description: 'Maximum pages to crawl'
        required: false
        default: '100'

jobs:
  website-audit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Install dependencies
        run: |
          cd website-optimization-agent
          pip install -r requirements.txt

      - name: Run website audit
        run: |
          cd website-optimization-agent
          python nara_optimizer.py --max-pages ${{ github.event.inputs.max_pages || '100' }} --output ../audit_results

      - name: Extract audit metrics
        id: metrics
        run: |
          if [ -f audit_results/optimization_report.json ]; then
            TOTAL_PAGES=$(jq '.summary.total_pages // 0' audit_results/optimization_report.json)
            BROKEN_LINKS=$(jq '.broken_links | length' audit_results/optimization_report.json)
            DUPLICATES=$(jq '.duplicate_content | length' audit_results/optimization_report.json)
            PLACEHOLDERS=$(jq '.placeholder_text | length' audit_results/optimization_report.json)
            ACCESSIBILITY=$(jq '[.page_metadata[] | select(.accessibility_issues | length > 0)] | length' audit_results/optimization_report.json)

            echo "total_pages=$TOTAL_PAGES" >> $GITHUB_OUTPUT
            echo "broken_links=$BROKEN_LINKS" >> $GITHUB_OUTPUT
            echo "duplicates=$DUPLICATES" >> $GITHUB_OUTPUT
            echo "placeholders=$PLACEHOLDERS" >> $GITHUB_OUTPUT
            echo "accessibility_issues=$ACCESSIBILITY" >> $GITHUB_OUTPUT
          fi

      - name: Create audit summary
        run: |
          cat > audit_results/AUDIT_SUMMARY.md << 'EOF'
          # Weekly Website Audit Summary

          **Date**: $(date +"%Y-%m-%d %H:%M:%S")
          **Workflow Run**: ${{ github.run_number }}

          ## üìä Metrics

          | Metric | Count |
          |--------|-------|
          | Total Pages Analyzed | ${{ steps.metrics.outputs.total_pages }} |
          | Broken Links | ${{ steps.metrics.outputs.broken_links }} |
          | Duplicate Content | ${{ steps.metrics.outputs.duplicates }} |
          | Placeholder Text | ${{ steps.metrics.outputs.placeholders }} |
          | Accessibility Issues | ${{ steps.metrics.outputs.accessibility_issues }} |

          ## üéØ Status

          - ‚úÖ Broken Links: ${{ steps.metrics.outputs.broken_links == 0 && 'PASS' || 'FAIL' }}
          - ‚úÖ Duplicate Content: ${{ steps.metrics.outputs.duplicates == 0 && 'PASS' || 'FAIL' }}
          - ‚úÖ Placeholder Text: ${{ steps.metrics.outputs.placeholders == 0 && 'PASS' || 'FAIL' }}

          ## üìÅ Full Reports

          See attached artifacts for complete analysis:
          - `OPTIMIZATION_REPORT.md` - Human-readable summary
          - `optimization_report.json` - Machine-readable data

          ---

          ü§ñ Generated by NARA Website Optimization Agent
          EOF

      - name: Upload audit results
        uses: actions/upload-artifact@v3
        with:
          name: weekly-audit-results-${{ github.run_number }}
          path: audit_results/
          retention-days: 90

      - name: Comment on issues if problems found
        if: steps.metrics.outputs.broken_links > 0 || steps.metrics.outputs.duplicates > 0
        run: |
          echo "‚ö†Ô∏è Website audit found issues:"
          echo "  - Broken Links: ${{ steps.metrics.outputs.broken_links }}"
          echo "  - Duplicate Content: ${{ steps.metrics.outputs.duplicates }}"
          echo "  - Placeholder Text: ${{ steps.metrics.outputs.placeholders }}"
          echo "  - Pages with Accessibility Issues: ${{ steps.metrics.outputs.accessibility_issues }}"
